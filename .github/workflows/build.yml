name: Build and Release SecVault

on:
  push:
    branches:
      - master

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install Mingw-w64 and dependencies
      - name: Install Windows toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64 binutils-mingw-w64

      # Step 3: Download JetBrains Runtime (JBR)
      - name: Download JetBrains Runtime
        run: |
          JBR_URL="https://cache-redirector.jetbrains.com/intellij-jbr/jbrsdk-17.0.10-linux-x64-b1207.1.tar.gz"
          wget $JBR_URL -O jbr.tar.gz
          mkdir jbr
          tar -xzf jbr.tar.gz -C jbr --strip-components=1

      # Step 4: Set Java environment
      - name: Set up Java
        run: echo "JAVA_HOME=${{ github.workspace }}/jbr" >> $GITHUB_ENV

      # Step 5: Grant Gradle permissions
      - name: Grant gradlew permissions
        run: chmod +x ./gradlew

      # Step 6: Build with WiX and debug logging
      - name: Build Windows MSI
        run: |
          # Force include WiX and enable debug logging
          ./gradlew packageMsi \
            -Pcompose.desktop.experimental.include_wix=true \
            --rerun-tasks \
            --info

      # Step 7: Verify artifacts
      - name: List build outputs
        run: ls -R build/compose/binaries

      # Step 8: Create release
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/compose/binaries/main/msi/*.msi"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.run_id }}
          name: Release ${{ github.run_id }}